buildscript {
	repositories {
		jcenter()
		maven {
			name = 'Fabric'
			url = 'http://maven.modmuss50.me/'
		}
	}
	dependencies {
		classpath "net.fabricmc:fabric-loom:0.1.0-SNAPSHOT"
	}
}

plugins {
	id 'java'
	id 'eclipse'
	id 'idea'
}

apply plugin: net.fabricmc.loom.LoomGradlePlugin

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "infraredstone"


ext {
	standardVersion = "18w50a-1.0"
}

repositories {
	flatDir {
		// here until farfetchd gets stuff in a maven
		dirs 'libs'
	}
}

dependencies {
	minecraft "com.mojang:minecraft:18w50a"
	mappings "net.fabricmc:yarn:18w50a.71"
	modCompile "net.fabricmc:fabric-loader:0.3.0.75"
	modCompile "net.fabricmc:fabric:0.1.2.64"
	implementation 'org.jetbrains:annotations:15.0'
	modCompile "io.github.prospector.silk:SilkAPI:1.0.0-25"
	modCompile name: "qcommon-architect-1.0.0"
	modCompile name: "qcommon-croco-1.0.3"
}

if (System.properties["release"] == null) {
	def branch
	if (System.env.BRANCH_NAME) {
		// Jenkins support
		branch = System.env.BRANCH_NAME
		branch = branch.substring(branch.lastIndexOf('/')+1)
	} else {
		branch = 'git rev-parse --abbrev-ref HEAD'.execute().in.text.trim()
	}
	if (branch == "HEAD") {
		branch = 'git rev-parse --short HEAD'.execute().in.text.trim()
	}
	def commits = 'git rev-list --count HEAD'.execute().in.text.trim()
	def dirty = !'git diff-index HEAD'.execute().in.text.trim().isEmpty()
	version = branch+'-'+ext.standardVersion+'.'+commits+(dirty ? '-dirty' : '')
} else {
	version = ext.standardVersion
}

//jar {
//	from "LICENSE"
//	from sourceSets.main.output
//	from sourceSets.api.output
//	classifier '' //this is the main jar!
//}
//
//task devJar(type: Jar, dependsOn: classes) {
//	from "LICENSE"
//	from sourceSets.main.output
////	from sourceSets.api.output
//	classifier 'dev'
//}
//
//sourceJar {
//	from "LICENSE"
//	classifier 'sources'
//}

//task apiJar(type: Jar) {
//	from sourceSets.api.allJava
//	from sourceSets.api.output
//	classifier 'api'
//}

//artifacts {
//	archives apiJar
//	archives sourceJar
//	archives devJar
//}


